// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Checkbox /> fire onPress event and change the checked value 1`] = `
<View
  accessible={true}
  clickable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
  testID="button"
>
  <View
    style={
      Object {
        "borderColor": "#00b2ff",
        "borderRadius": 10,
        "borderWidth": 1,
        "height": 20,
        "width": 20,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "borderRadius": 10,
            "height": 14,
            "margin": 2,
            "width": 14,
          },
          Object {
            "backgroundColor": "#FFF",
          },
        ]
      }
    />
  </View>
  <Text
    style={
      Object {
        "color": "rgba(0, 0, 0, 0.87)",
        "fontFamily": "SF Pro Text",
        "fontSize": 14,
        "fontWeight": "400",
        "letterSpacing": 0.17136,
        "lineHeight": 21,
        "marginLeft": 8,
      }
    }
  >
    button
  </Text>
</View>
`;

exports[`<Checkbox /> fire onPress event and change the checked value 2`] = `
<View
  accessible={true}
  clickable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
  testID="button"
>
  <View
    style={
      Object {
        "borderColor": "#00b2ff",
        "borderRadius": 10,
        "borderWidth": 1,
        "height": 20,
        "width": 20,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "borderRadius": 10,
            "height": 14,
            "margin": 2,
            "width": 14,
          },
          Object {
            "backgroundColor": "#00b2ff",
          },
        ]
      }
    />
  </View>
  <Text
    style={
      Object {
        "color": "rgba(0, 0, 0, 0.87)",
        "fontFamily": "SF Pro Text",
        "fontSize": 14,
        "fontWeight": "400",
        "letterSpacing": 0.17136,
        "lineHeight": 21,
        "marginLeft": 8,
      }
    }
  >
    button
  </Text>
</View>
`;

exports[`<Checkbox /> test props checked={false} 1`] = `
<View
  accessible={true}
  clickable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
>
  <View
    style={
      Object {
        "borderColor": "#00b2ff",
        "borderRadius": 10,
        "borderWidth": 1,
        "height": 20,
        "width": 20,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "borderRadius": 10,
            "height": 14,
            "margin": 2,
            "width": 14,
          },
          Object {
            "backgroundColor": "#FFF",
          },
        ]
      }
    />
  </View>
  <Text
    style={
      Object {
        "color": "rgba(0, 0, 0, 0.87)",
        "fontFamily": "SF Pro Text",
        "fontSize": 14,
        "fontWeight": "400",
        "letterSpacing": 0.17136,
        "lineHeight": 21,
        "marginLeft": 8,
      }
    }
  >
    button
  </Text>
</View>
`;

exports[`<Checkbox /> test props checked={true} 1`] = `
<View
  accessible={true}
  clickable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
>
  <View
    style={
      Object {
        "borderColor": "#00b2ff",
        "borderRadius": 10,
        "borderWidth": 1,
        "height": 20,
        "width": 20,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "borderRadius": 10,
            "height": 14,
            "margin": 2,
            "width": 14,
          },
          Object {
            "backgroundColor": "#FFF",
          },
        ]
      }
    />
  </View>
  <Text
    style={
      Object {
        "color": "rgba(0, 0, 0, 0.87)",
        "fontFamily": "SF Pro Text",
        "fontSize": 14,
        "fontWeight": "400",
        "letterSpacing": 0.17136,
        "lineHeight": 21,
        "marginLeft": 8,
      }
    }
  >
    button
  </Text>
</View>
`;
